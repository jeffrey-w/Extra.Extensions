### YamlMime:ManagedReference
items:
  - uid: Extra.Extensions.Types
    commentId: T:Extra.Extensions.Types
    id: Types
    parent: Extra.Extensions
    children:
      - Extra.Extensions.Types.GetEveryBaseType(System.Type)
      - Extra.Extensions.Types.IsNullable(System.Type)
      - Extra.Extensions.Types.IsStatic(System.Type)
    langs:
      - csharp
      - vb
    name: Types
    nameWithType: Types
    fullName: Extra.Extensions.Types
    type: Class
    source:
      remote:
        path: Extra.Extensions/src/Types.cs
        branch: main
        repo: git@github.com:jeffrey-w/Extra.Extensions.git
      id: Types
      path: ../src/Types.cs
      startLine: 6
    assemblies:
      - Extra.Extensions
    namespace: Extra.Extensions
    summary: >-
      The <code>Types</code> class provides additional operations on the
      
      <xref href="System.Type" data-throw-if-not-resolved="false"></xref> class.
    example: [ ]
    syntax:
      content: public static class Types
      content.vb: Public Module Types
    inheritance:
      - System.Object
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
  - uid: Extra.Extensions.Types.IsNullable(System.Type)
    commentId: M:Extra.Extensions.Types.IsNullable(System.Type)
    id: IsNullable(System.Type)
    isExtensionMethod: true
    parent: Extra.Extensions.Types
    langs:
      - csharp
      - vb
    name: IsNullable(Type)
    nameWithType: Types.IsNullable(Type)
    fullName: Extra.Extensions.Types.IsNullable(System.Type)
    type: Method
    source:
      remote:
        path: Extra.Extensions/src/Types.cs
        branch: main
        repo: git@github.com:jeffrey-w/Extra.Extensions.git
      id: IsNullable
      path: ../src/Types.cs
      startLine: 15
    assemblies:
      - Extra.Extensions
    namespace: Extra.Extensions
    summary: Determines whether the <code>null</code> value belongs to this <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
    example: [ ]
    syntax:
      content: public static bool IsNullable(this Type type)
      parameters:
        - id: type
          type: System.Type
          description: This <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
      return:
        type: System.Boolean
        description: <code>true</code> if the <code>null</code> value belongs to this <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
      content.vb: Public Shared Function IsNullable(type As Type) As Boolean
    overload: Extra.Extensions.Types.IsNullable*
  - uid: Extra.Extensions.Types.IsStatic(System.Type)
    commentId: M:Extra.Extensions.Types.IsStatic(System.Type)
    id: IsStatic(System.Type)
    isExtensionMethod: true
    parent: Extra.Extensions.Types
    langs:
      - csharp
      - vb
    name: IsStatic(Type)
    nameWithType: Types.IsStatic(Type)
    fullName: Extra.Extensions.Types.IsStatic(System.Type)
    type: Method
    source:
      remote:
        path: Extra.Extensions/src/Types.cs
        branch: main
        repo: git@github.com:jeffrey-w/Extra.Extensions.git
      id: IsStatic
      path: ../src/Types.cs
      startLine: 23
    assemblies:
      - Extra.Extensions
    namespace: Extra.Extensions
    summary: Determines whether this <xref href="System.Type" data-throw-if-not-resolved="false"></xref> is static.
    example: [ ]
    syntax:
      content: public static bool IsStatic(this Type type)
      parameters:
        - id: type
          type: System.Type
          description: This <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
      return:
        type: System.Boolean
        description: <code>true</code> if this <xref href="System.Type" data-throw-if-not-resolved="false"></xref> is static.
      content.vb: Public Shared Function IsStatic(type As Type) As Boolean
    overload: Extra.Extensions.Types.IsStatic*
  - uid: Extra.Extensions.Types.GetEveryBaseType(System.Type)
    commentId: M:Extra.Extensions.Types.GetEveryBaseType(System.Type)
    id: GetEveryBaseType(System.Type)
    isExtensionMethod: true
    parent: Extra.Extensions.Types
    langs:
      - csharp
      - vb
    name: GetEveryBaseType(Type)
    nameWithType: Types.GetEveryBaseType(Type)
    fullName: Extra.Extensions.Types.GetEveryBaseType(System.Type)
    type: Method
    source:
      remote:
        path: Extra.Extensions/src/Types.cs
        branch: main
        repo: git@github.com:jeffrey-w/Extra.Extensions.git
      id: GetEveryBaseType
      path: ../src/Types.cs
      startLine: 36
    assemblies:
      - Extra.Extensions
    namespace: Extra.Extensions
    summary: Provides every <xref href="System.Type" data-throw-if-not-resolved="false"></xref> from witch this one derives.
    remarks: The provided collection of <xref href="System.Type" data-throw-if-not-resolved="false"></xref>s excludes <code>typeof(object)</code>.
    example: [ ]
    syntax:
      content: public static IEnumerable<Type> GetEveryBaseType(this Type type)
      parameters:
        - id: type
          type: System.Type
          description: This <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
      return:
        type: System.Collections.Generic.IEnumerable{System.Type}
        description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref>s that this one extends.
      content.vb: Public Shared Function GetEveryBaseType(type As Type) As IEnumerable(Of Type)
    overload: Extra.Extensions.Types.GetEveryBaseType*
references:
  - uid: System.Type
    commentId: T:System.Type
    parent: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - uid: Extra.Extensions
    commentId: N:Extra.Extensions
    href: Extra.html
    name: Extra.Extensions
    nameWithType: Extra.Extensions
    fullName: Extra.Extensions
    spec.csharp:
      - uid: Extra
        name: Extra
        href: Extra.html
      - name: .
      - uid: Extra.Extensions
        name: Extensions
        href: Extra.Extensions.html
    spec.vb:
      - uid: Extra
        name: Extra
        href: Extra.html
      - name: .
      - uid: Extra.Extensions
        name: Extensions
        href: Extra.Extensions.html
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
    name: object
    nameWithType: object
    fullName: object
    nameWithType.vb: Object
    fullName.vb: Object
    name.vb: Object
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
    name: Equals(object)
    nameWithType: object.Equals(object)
    fullName: object.Equals(object)
    nameWithType.vb: Object.Equals(Object)
    fullName.vb: Object.Equals(Object)
    name.vb: Equals(Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
      - name: (
      - uid: System.Object
        name: object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
      - name: (
      - uid: System.Object
        name: Object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
    name: Equals(object, object)
    nameWithType: object.Equals(object, object)
    fullName: object.Equals(object, object)
    nameWithType.vb: Object.Equals(Object, Object)
    fullName.vb: Object.Equals(Object, Object)
    name.vb: Equals(Object, Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
      - name: (
      - uid: System.Object
        name: object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: ','
      - name: " "
      - uid: System.Object
        name: object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
      - name: (
      - uid: System.Object
        name: Object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: ','
      - name: " "
      - uid: System.Object
        name: Object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
    name: GetHashCode()
    nameWithType: object.GetHashCode()
    fullName: object.GetHashCode()
    nameWithType.vb: Object.GetHashCode()
    fullName.vb: Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
      - name: (
      - name: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
      - name: (
      - name: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
    name: GetType()
    nameWithType: object.GetType()
    fullName: object.GetType()
    nameWithType.vb: Object.GetType()
    fullName.vb: Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.gettype
      - name: (
      - name: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.gettype
      - name: (
      - name: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
    name: MemberwiseClone()
    nameWithType: object.MemberwiseClone()
    fullName: object.MemberwiseClone()
    nameWithType.vb: Object.MemberwiseClone()
    fullName.vb: Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
      - name: (
      - name: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
      - name: (
      - name: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
    name: ReferenceEquals(object, object)
    nameWithType: object.ReferenceEquals(object, object)
    fullName: object.ReferenceEquals(object, object)
    nameWithType.vb: Object.ReferenceEquals(Object, Object)
    fullName.vb: Object.ReferenceEquals(Object, Object)
    name.vb: ReferenceEquals(Object, Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
      - name: (
      - uid: System.Object
        name: object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: ','
      - name: " "
      - uid: System.Object
        name: object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
      - name: (
      - uid: System.Object
        name: Object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: ','
      - name: " "
      - uid: System.Object
        name: Object
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object
      - name: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
    name: ToString()
    nameWithType: object.ToString()
    fullName: object.ToString()
    nameWithType.vb: Object.ToString()
    fullName.vb: Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.tostring
      - name: (
      - name: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.object.tostring
      - name: (
      - name: )
  - uid: System
    commentId: N:System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
    name: System
    nameWithType: System
    fullName: System
  - uid: Extra.Extensions.Types.IsNullable*
    commentId: Overload:Extra.Extensions.Types.IsNullable
    href: Extra.Extensions.Types.html#Extra_Extensions_Types_IsNullable_System_Type_
    name: IsNullable
    nameWithType: Types.IsNullable
    fullName: Extra.Extensions.Types.IsNullable
  - uid: System.Boolean
    commentId: T:System.Boolean
    parent: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
    name: bool
    nameWithType: bool
    fullName: bool
    nameWithType.vb: Boolean
    fullName.vb: Boolean
    name.vb: Boolean
  - uid: Extra.Extensions.Types.IsStatic*
    commentId: Overload:Extra.Extensions.Types.IsStatic
    href: Extra.Extensions.Types.html#Extra_Extensions_Types_IsStatic_System_Type_
    name: IsStatic
    nameWithType: Types.IsStatic
    fullName: Extra.Extensions.Types.IsStatic
  - uid: Extra.Extensions.Types.GetEveryBaseType*
    commentId: Overload:Extra.Extensions.Types.GetEveryBaseType
    href: Extra.Extensions.Types.html#Extra_Extensions_Types_GetEveryBaseType_System_Type_
    name: GetEveryBaseType
    nameWithType: Types.GetEveryBaseType
    fullName: Extra.Extensions.Types.GetEveryBaseType
  - uid: System.Collections.Generic.IEnumerable{System.Type}
    commentId: T:System.Collections.Generic.IEnumerable{System.Type}
    parent: System.Collections.Generic
    definition: System.Collections.Generic.IEnumerable`1
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    name: IEnumerable<Type>
    nameWithType: IEnumerable<Type>
    fullName: System.Collections.Generic.IEnumerable<System.Type>
    nameWithType.vb: IEnumerable(Of Type)
    fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
    name.vb: IEnumerable(Of Type)
    spec.csharp:
      - uid: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
      - name: <
      - uid: System.Type
        name: Type
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.type
      - name: '>'
    spec.vb:
      - uid: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
      - name: (
      - name: Of
      - name: " "
      - uid: System.Type
        name: Type
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.type
      - name: )
  - uid: System.Collections.Generic.IEnumerable`1
    commentId: T:System.Collections.Generic.IEnumerable`1
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    name: IEnumerable<T>
    nameWithType: IEnumerable<T>
    fullName: System.Collections.Generic.IEnumerable<T>
    nameWithType.vb: IEnumerable(Of T)
    fullName.vb: System.Collections.Generic.IEnumerable(Of T)
    name.vb: IEnumerable(Of T)
    spec.csharp:
      - uid: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
      - name: <
      - name: T
      - name: '>'
    spec.vb:
      - uid: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
  - uid: System.Collections.Generic
    commentId: N:System.Collections.Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
    name: System.Collections.Generic
    nameWithType: System.Collections.Generic
    fullName: System.Collections.Generic
    spec.csharp:
      - uid: System
        name: System
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system
      - name: .
      - uid: System.Collections
        name: Collections
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.collections
      - name: .
      - uid: System.Collections.Generic
        name: Generic
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.collections.generic
    spec.vb:
      - uid: System
        name: System
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system
      - name: .
      - uid: System.Collections
        name: Collections
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.collections
      - name: .
      - uid: System.Collections.Generic
        name: Generic
        isExternal: true
        href: https://learn.microsoft.com/dotnet/api/system.collections.generic
